# Generated by Django 4.2.7 on 2025-07-29 18:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LiveClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('scheduled_at', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(help_text='Duration in minutes (minimum 15)', validators=[django.core.validators.MinValueValidator(15)])),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('live', 'Live'), ('ended', 'Ended'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('meeting_url', models.URLField(blank=True, help_text='Zoom, Google Meet, or other meeting URL')),
                ('meeting_id', models.CharField(blank=True, max_length=100)),
                ('meeting_password', models.CharField(blank=True, max_length=50)),
                ('max_participants', models.PositiveIntegerField(default=50)),
                ('is_public', models.BooleanField(default=False, help_text='Available to all enrolled students')),
                ('requires_approval', models.BooleanField(default=False, help_text='Teacher approval required to join')),
                ('will_be_recorded', models.BooleanField(default=False)),
                ('recording_url', models.URLField(blank=True)),
                ('current_participants', models.PositiveIntegerField(default=0)),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Live Class',
                'verbose_name_plural': 'Live Classes',
                'db_table': 'live_classes',
                'ordering': ['-scheduled_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveClassMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('question', 'Question'), ('answer', 'Answer'), ('system', 'System')], default='text', max_length=20)),
                ('is_private', models.BooleanField(default=False, help_text='Private message to teacher')),
                ('is_answered', models.BooleanField(default=False, help_text='Question has been answered')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Live Class Message',
                'verbose_name_plural': 'Live Class Messages',
                'db_table': 'live_class_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveClassParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('approved', 'Approved'), ('attended', 'Attended'), ('no_show', 'No Show'), ('cancelled', 'Cancelled')], default='registered', max_length=20)),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('attendance_duration', models.PositiveIntegerField(default=0, help_text='Attendance duration in minutes')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Live Class Participant',
                'verbose_name_plural': 'Live Class Participants',
                'db_table': 'live_class_participants',
            },
        ),
        migrations.CreateModel(
            name='LiveClassRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('recording_url', models.URLField()),
                ('recording_file', models.FileField(blank=True, null=True, upload_to='live_class_recordings/')),
                ('duration_minutes', models.PositiveIntegerField(default=0)),
                ('file_size', models.PositiveIntegerField(default=0, help_text='File size in bytes')),
                ('is_public', models.BooleanField(default=False, help_text='Available to all enrolled students')),
                ('is_downloadable', models.BooleanField(default=False, help_text='Students can download recording')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('live_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', to='live_classes.liveclass')),
            ],
            options={
                'verbose_name': 'Live Class Recording',
                'verbose_name_plural': 'Live Class Recordings',
                'db_table': 'live_class_recordings',
                'ordering': ['-created_at'],
            },
        ),
    ]
